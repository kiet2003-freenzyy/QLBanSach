
package doan.UI;
import doan.Dao.SachDao;
import doan.Dao.PhieuNhapDao;
import doan.Dao.CTPhieuNhapDao;
import doan.Dao.HoaDonDao;
import doan.Model.Sach;
import doan.Model.PhieuNhap;
import doan.Model.CTPhieuNhap;
import doan.Model.ChiTietHoaDon;
import doan.Model.HoaDon;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

public class frmPhieuNhap extends javax.swing.JInternalFrame {
    Connection connection = null;
    Statement statement = null;
    ResultSet resultset;
    DefaultTableModel dtm = new DefaultTableModel();
    DefaultTableModel dtm2 = new DefaultTableModel();
    DefaultTableModel dtm3 = new DefaultTableModel();
    PreparedStatement preStatement;
    /**
     * Creates new form frmPhieuNhap
     */
    public frmPhieuNhap() {
        initComponents();
        this.setTitle("Quản lý nhập sách");
        HienThiPN();
        HienThiCTPN();        
        hienThiSach();
        loadNVComboBox();
    }
    public void loadNVComboBox() {
        PhieuNhapDao loaiSachDao = new PhieuNhapDao();
        ArrayList<PhieuNhap> danhSachPhieuNhap = loaiSachDao.loadNVienComboBox();
        cboNV.removeAllItems();
        for (PhieuNhap loaiSach : danhSachPhieuNhap) {
            cboNV.addItem(loaiSach.getNhanVien());
        }
    }
    public String getSelectedTheLoaiValue() {
        PhieuNhapDao loaiSachDao = new PhieuNhapDao();
        String tenLoaiSach = (String) cboNV.getSelectedItem();
        
        PhieuNhap selectedLoaiSach = loaiSachDao.getNhanVienByTen(tenLoaiSach);
            return selectedLoaiSach.getNhanVien();

    }

private void HienThiPN() {
    PhieuNhapDao phieunhapDao = new PhieuNhapDao();
    ArrayList<PhieuNhap> danhSachPhieuNhap = phieunhapDao.hienThi();

    DefaultTableModel dtm = (DefaultTableModel) tb_PN.getModel();
    dtm.setRowCount(0);

    String[] tieuDe = {"Mã phiếu nhập", "Ghi chú", "Ngày nhập", "Nhân viên", "Tổng tiền"};
    dtm.setColumnIdentifiers(tieuDe);

    for (PhieuNhap phieuNhap : danhSachPhieuNhap) {
        Object[] row = {
            phieuNhap.getPnsId(),
            phieuNhap.getGhiChu(),
            phieuNhap.getNgay(),
            phieuNhap.getNhanVien(),
            phieuNhap.getTongTien()
        };
        dtm.addRow(row);
    }
}

    private void HienThiCTPN(){
    CTPhieuNhapDao ctphieunhapDao = new CTPhieuNhapDao(); // con is your Connection object
    ArrayList<CTPhieuNhap> danhSachctPhieuNhap = ctphieunhapDao.hienThi();

    DefaultTableModel dtm2 = (DefaultTableModel) tb_CTPN.getModel();
    dtm2.setRowCount(0);

    String[] tieuDe2 = {"Mã CTPN", "Mã PN", "Mã Sách", "Số Lượng", "Thành tiền"};
    dtm2.setColumnIdentifiers(tieuDe2);

    for (CTPhieuNhap ctphieuNhap : danhSachctPhieuNhap) {
        Object[] row = {
            ctphieuNhap.getCtpnsId(),
            ctphieuNhap.getIdPhieuNhap(),
            ctphieuNhap.getIdSach(),
            ctphieuNhap.getSoLuong(),
            ctphieuNhap.getThanhTien()
        };
        dtm2.addRow(row);
    }
    }
    public void hienThiSach() {
        SachDao sachDao = new SachDao();
        ArrayList<Sach> danhSachSach = sachDao.hienThi();

        DefaultTableModel dtm3 = (DefaultTableModel) tbSach.getModel();
        dtm3.setRowCount(0);

        String[] tieuDe3 = {"Mã sách", "Tiêu đề", "Giá bán"};
        dtm3.setColumnIdentifiers(tieuDe3);

        for (Sach sach : danhSachSach) {
            Object[] row = {
                sach.getsId(),
                sach.getTieuDe(),
                sach.getGiaBan(),
            };
            dtm3.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_NgayNhap = new javax.swing.JTextField();
        txt_GhiChu = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_PN = new javax.swing.JTable();
        btn_ThemPN = new javax.swing.JButton();
        btn_XoaPN = new javax.swing.JButton();
        btn_SuaPN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cboNV = new javax.swing.JComboBox<>();
        btn_In = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_MaPN = new javax.swing.JTextField();
        txt_MaSach = new javax.swing.JTextField();
        txt_SL = new javax.swing.JTextField();
        btn_ThemCTPN = new javax.swing.JButton();
        btn_XoaCTPN = new javax.swing.JButton();
        btn_SuaCTPN = new javax.swing.JButton();
        btn_SuaCTPN1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_CTPN = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbSach = new javax.swing.JTable();
        txt_Search = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("LẬP PHIẾU NHẬP");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Phiếu nhập"));

        jLabel3.setText("Ngày nhập");

        jLabel5.setText("Ghi chú");

        tb_PN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_PN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_PNMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb_PN);

        btn_ThemPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add30.png"))); // NOI18N
        btn_ThemPN.setText("Thêm");
        btn_ThemPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemPNActionPerformed(evt);
            }
        });

        btn_XoaPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/del.png"))); // NOI18N
        btn_XoaPN.setText("Xóa");
        btn_XoaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaPNActionPerformed(evt);
            }
        });

        btn_SuaPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-fix-32.png"))); // NOI18N
        btn_SuaPN.setText("Sửa");
        btn_SuaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaPNActionPerformed(evt);
            }
        });

        jLabel2.setText("Nhân viên");

        btn_In.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-pdf-32.png"))); // NOI18N
        btn_In.setText("In Phiếu Nhập");
        btn_In.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_NgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel5))
                            .addComponent(cboNV, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_GhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_ThemPN, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(btn_XoaPN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_SuaPN)
                        .addGap(74, 74, 74)
                        .addComponent(btn_In)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_NgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(txt_GhiChu))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6))
                    .addComponent(cboNV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_XoaPN)
                    .addComponent(btn_ThemPN)
                    .addComponent(btn_SuaPN)
                    .addComponent(btn_In))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết phiếu nhập"));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sách"));

        jLabel6.setText("Mã PN");

        jLabel8.setText("Mã Sách");

        jLabel9.setText("Số Lượng");

        btn_ThemCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add30.png"))); // NOI18N
        btn_ThemCTPN.setText("Thêm");
        btn_ThemCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemCTPNActionPerformed(evt);
            }
        });

        btn_XoaCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/del.png"))); // NOI18N
        btn_XoaCTPN.setText("Xóa");
        btn_XoaCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaCTPNActionPerformed(evt);
            }
        });

        btn_SuaCTPN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-fix-32.png"))); // NOI18N
        btn_SuaCTPN.setText("Sửa");
        btn_SuaCTPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaCTPNActionPerformed(evt);
            }
        });

        btn_SuaCTPN1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-logout-32.png"))); // NOI18N
        btn_SuaCTPN1.setText("Đóng");
        btn_SuaCTPN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaCTPN1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_MaPN)
                            .addComponent(txt_MaSach, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_ThemCTPN, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(btn_XoaCTPN, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_SL, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(61, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_SuaCTPN, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btn_SuaCTPN1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txt_MaPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_SL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_XoaCTPN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ThemCTPN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_SuaCTPN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_SuaCTPN1))
                .addContainerGap())
        );

        tb_CTPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_CTPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_CTPNMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_CTPN);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Sách"));

        tbSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tbSach);

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btnSearch)
                .addGap(50, 50, 50)
                .addComponent(btnReset)
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Search)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(64, 64, 64))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(txt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ThemPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemPNActionPerformed
    try {

        // Tạo một phiếu nhập mới từ dữ liệu nhập vào từ giao diện người dùng
        PhieuNhap phieuNhap = new PhieuNhap();
        phieuNhap.setGhiChu(txt_GhiChu.getText());

        // Đọc dữ liệu từ ô nhập ngày và chuyển đổi sang định dạng phù hợp cho SQL
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date ngayNhap = sdf.parse(txt_NgayNhap.getText());
        java.sql.Date sqlDate = new java.sql.Date(ngayNhap.getTime());
        phieuNhap.setNgay(sqlDate.toString());

        // Kiểm tra xem đã chọn nhân viên hay chưa
        if (cboNV.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy tên nhân viên từ combobox và đặt vào phiếu nhập
        String tenNhanVien = (String) cboNV.getSelectedItem();
        phieuNhap.setNhanVien(tenNhanVien);

        // Thực hiện thêm phiếu nhập bằng cách gọi phương thức themPhieuNhap từ đối tượng PhieuNhapDao
        PhieuNhapDao phieuNhapDao = new PhieuNhapDao();
        boolean themThanhCong = phieuNhapDao.themPhieuNhap(phieuNhap);

        // Hiển thị thông báo kết quả cho người dùng
        if (themThanhCong) {
            JOptionPane.showMessageDialog(this, "Thêm phiếu nhập thành công.");
            HienThiPN(); // Cập nhật lại hiển thị danh sách phiếu nhập sau khi thêm mới
        } else {
            JOptionPane.showMessageDialog(this, "Thêm phiếu nhập thất bại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } catch (ParseException ex) {
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btn_ThemPNActionPerformed

    private void btn_XoaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaPNActionPerformed
    int selectedRow = tb_PN.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một phiếu nhập để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int pnsId = (int) tb_PN.getValueAt(selectedRow, 0);
    try {
        PhieuNhapDao phieuNhapDao = new PhieuNhapDao();
        boolean xoaThanhCong = phieuNhapDao.xoaPhieuNhap(pnsId);

        if (xoaThanhCong) {
            JOptionPane.showMessageDialog(this, "Phiếu nhập đã được xóa thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            HienThiPN();
        } else {
            JOptionPane.showMessageDialog(this, "Không thể xóa phiếu nhập.", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi xóa phiếu nhập.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(frmPhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btn_XoaPNActionPerformed

    private void btn_SuaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaPNActionPerformed
    int selectedRow = tb_PN.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một phiếu nhập để cập nhật!");
        return;
    }

    int pnsId = (int) tb_PN.getValueAt(selectedRow, 0);
    String ngay = txt_NgayNhap.getText();
    String ghiChu = txt_GhiChu.getText();

    try {
        PhieuNhapDao phieuNhapDao = new PhieuNhapDao();
        boolean capNhatThanhCong = phieuNhapDao.capNhatPhieuNhap(new PhieuNhap(pnsId, ghiChu, ngay, "", 0));

        if (capNhatThanhCong) {
            // Cập nhật thành công, thiết lập lại giá trị cho ô nhân viên từ combobox
            String tenNhanVien = (String) cboNV.getSelectedItem();
            int indexOfColumn = 3;
            tb_PN.setValueAt(tenNhanVien, selectedRow, indexOfColumn); // Thay indexOfColumn bằng chỉ số cột của ô nhân viên trong bảng tb_PN
            JOptionPane.showMessageDialog(this, "Cập nhật phiếu nhập thành công!");
            HienThiPN();
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy phiếu nhập cần cập nhật!");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Cập nhật phiếu nhập không thành công!");
        Logger.getLogger(frmPhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
    }

    txt_NgayNhap.setText("");
    txt_GhiChu.setText("");
    }//GEN-LAST:event_btn_SuaPNActionPerformed

    private void btn_ThemCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemCTPNActionPerformed
    try {
        int soLuong = Integer.parseInt(txt_SL.getText());
        BigDecimal giaBan;
        
        if (tbSach.getSelectedRow() != -1) {
            String giaBanStr = tbSach.getValueAt(tbSach.getSelectedRow(), 2).toString();
            giaBan = new BigDecimal(giaBanStr);
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sách!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        BigDecimal tongTien = giaBan.multiply(BigDecimal.valueOf(soLuong));
        
        CTPhieuNhap chiTietPhieuNhap = new CTPhieuNhap();
        chiTietPhieuNhap.setIdPhieuNhap(Integer.parseInt(txt_MaPN.getText()));
        chiTietPhieuNhap.setIdSach((txt_MaSach.getText()));
        chiTietPhieuNhap.setSoLuong(soLuong);
        chiTietPhieuNhap.setThanhTien(tongTien.doubleValue());

        boolean isInserted = chiTietPhieuNhapDAO.themChiTietPhieuNhap(chiTietPhieuNhap);

        if (isInserted) {
            JOptionPane.showMessageDialog(this, "Thêm thành công!");
            HienThiCTPN();
            HienThiPN();
        } else {
            JOptionPane.showMessageDialog(this, "Không thể thêm chi tiết phiếu nhập.", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Lỗi định dạng số: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(frmPhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(frmPhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btn_ThemCTPNActionPerformed
private CTPhieuNhapDao chiTietPhieuNhapDAO = new CTPhieuNhapDao();
    private void btn_XoaCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaCTPNActionPerformed
   int selectedRow = tb_CTPN.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một chi tiết phiếu nhập để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int ctpnsId = (int) tb_CTPN.getValueAt(selectedRow, 0);
    boolean isDeleted = chiTietPhieuNhapDAO.xoaChiTietPhieuNhap(ctpnsId);

    if (isDeleted) {
        JOptionPane.showMessageDialog(this, "Chi tiết phiếu nhập đã được xóa thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        HienThiCTPN();
    } else {
        JOptionPane.showMessageDialog(this, "Không thể xóa chi tiết phiếu nhập.", "Thông báo", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btn_XoaCTPNActionPerformed

    private void btn_SuaCTPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaCTPNActionPerformed
    int selectedRow = tb_CTPN.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một chi tiết phiếu nhập để cập nhật!");
        return;
    }

    int ctpnsId = (int) tb_CTPN.getValueAt(selectedRow, 0);
    int idPhieuNhap = Integer.parseInt(txt_MaPN.getText());
    String idSach = txt_MaSach.getText();
    int soLuong = Integer.parseInt(txt_SL.getText());
    
    BigDecimal giaBan;
    if (tbSach.getSelectedRow() != -1) {
        String giaBanStr = tbSach.getValueAt(tbSach.getSelectedRow(), 2).toString();
        giaBan = new BigDecimal(giaBanStr);
    } else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn sách!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }
    BigDecimal thanhTien = giaBan.multiply(BigDecimal.valueOf(soLuong));
    
    CTPhieuNhap chiTietPhieuNhap = new CTPhieuNhap();
    chiTietPhieuNhap.setCtpnsId(ctpnsId);
    chiTietPhieuNhap.setIdPhieuNhap(idPhieuNhap);
    chiTietPhieuNhap.setIdSach(idSach);
    chiTietPhieuNhap.setSoLuong(soLuong);
    chiTietPhieuNhap.setThanhTien(thanhTien.doubleValue());

    boolean isUpdated = chiTietPhieuNhapDAO.capNhatChiTietPhieuNhap(chiTietPhieuNhap);

    if (isUpdated) {
        JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        HienThiCTPN();
        HienThiPN();
    } else {
        JOptionPane.showMessageDialog(this, "Không tìm thấy chi tiết phiếu nhập cần cập nhật!");
    }

    txt_MaPN.setText("");
    txt_MaSach.setText("");
    txt_SL.setText("");
    }//GEN-LAST:event_btn_SuaCTPNActionPerformed

    private void btn_SuaCTPN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaCTPN1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_SuaCTPN1ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String keyword = txt_Search.getText();
        
        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập từ khóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        SachDao sachDao = new SachDao();
        ArrayList<Sach> danhSachSach = sachDao.timKiemSach(keyword);

        DefaultTableModel dtm3 = (DefaultTableModel) tbSach.getModel();
        dtm3.setRowCount(0);

        String[] tieuDe = {"Mã sách", "Tiêu đề", "Giá bán"};
        dtm3.setColumnIdentifiers(tieuDe);

        for (Sach sach : danhSachSach) {
            Object[] row = {
                sach.getsId(),
                sach.getTieuDe(),
                sach.getGiaBan(),
            };
            dtm3.addRow(row);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        hienThiSach();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btn_InActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InActionPerformed
        int selectedRow = tb_PN.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một phiếu nhập để xuất!");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tb_PN.getModel();

        int maPN = (int) model.getValueAt(selectedRow, 0);
        String ghiChu = (String) model.getValueAt(selectedRow, 1); 
        String ngayHD = (String) model.getValueAt(selectedRow, 2);
        String nhanVien = (String) model.getValueAt(selectedRow, 3); 
        double tongTien = (double) model.getValueAt(selectedRow, 4);

        PhieuNhap hoaDon = new PhieuNhap();
        hoaDon.setPnsId(maPN);
        hoaDon.setNhanVien(nhanVien);
        hoaDon.setGhiChu(ghiChu);
        hoaDon.setNgay(ngayHD);
        hoaDon.setTongTien(tongTien);

        PhieuNhapDao hoaDonDao = new PhieuNhapDao();
        ArrayList<CTPhieuNhap> danhSachChiTiet = hoaDonDao.layCTHDtheoID(maPN);
        hoaDon.setDanhSachChiTiet(danhSachChiTiet);

        // Tạo hộp thoại để chọn đường dẫn lưu file
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn nơi lưu hóa đơn");

        // Thiết lập bộ lọc cho tệp PDF
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF files (*.pdf)", "pdf");
        fileChooser.setFileFilter(filter);

        // Hiển thị hộp thoại và lấy đường dẫn lưu file từ người dùng
        int result = fileChooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getAbsolutePath();

            // Thêm phần mở rộng ".pdf" nếu người dùng chưa chỉ định
            if (!filePath.toLowerCase().endsWith(".pdf")) {
                filePath += ".pdf";
            }

            // Xuất hóa đơn PDF với thông tin và chi tiết hóa đơn đã có
            boolean isSuccess;
            try {
                isSuccess = hoaDonDao.xuatHoaDonPDF(hoaDon, filePath);
                JOptionPane.showMessageDialog(this, "Xuất hóa đơn thành công! Tệp đã được lưu tại: " + filePath);
            } catch (IOException ex) {
                Logger.getLogger(frmHoaDon.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Lỗi khi xuất hóa đơn!");
            }
        }
    }//GEN-LAST:event_btn_InActionPerformed

    private void tb_PNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_PNMouseClicked
        int selectedRow = tb_PN.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy dữ liệu từ dòng được chọn
            
            String ngay = tb_PN.getValueAt(selectedRow, 2).toString();
            String ghichu = tb_PN.getValueAt(selectedRow, 1).toString();

            // Hiển thị dữ liệu trong các JTextField tương ứng
            txt_NgayNhap.setText(ngay);
            txt_GhiChu.setText(ghichu);
        }
    }//GEN-LAST:event_tb_PNMouseClicked

    private void tb_CTPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_CTPNMouseClicked
        int selectedRow = tb_CTPN.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy dữ liệu từ dòng được chọn
            
            String mapn = tb_CTPN.getValueAt(selectedRow, 1).toString();
            String masach = tb_CTPN.getValueAt(selectedRow, 2).toString();
            String soluong = tb_CTPN.getValueAt(selectedRow, 3).toString();

            // Hiển thị dữ liệu trong các JTextField tương ứng
            txt_MaPN.setText(mapn);
            txt_MaSach.setText(masach);
            txt_SL.setText(soluong);
        }
    }//GEN-LAST:event_tb_CTPNMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btn_In;
    private javax.swing.JButton btn_SuaCTPN;
    private javax.swing.JButton btn_SuaCTPN1;
    private javax.swing.JButton btn_SuaPN;
    private javax.swing.JButton btn_ThemCTPN;
    private javax.swing.JButton btn_ThemPN;
    private javax.swing.JButton btn_XoaCTPN;
    private javax.swing.JButton btn_XoaPN;
    private javax.swing.JComboBox<String> cboNV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbSach;
    private javax.swing.JTable tb_CTPN;
    private javax.swing.JTable tb_PN;
    private javax.swing.JTextField txt_GhiChu;
    private javax.swing.JTextField txt_MaPN;
    private javax.swing.JTextField txt_MaSach;
    private javax.swing.JTextField txt_NgayNhap;
    private javax.swing.JTextField txt_SL;
    private javax.swing.JTextField txt_Search;
    // End of variables declaration//GEN-END:variables
}
